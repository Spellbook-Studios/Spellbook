import org.gradle.internal.os.OperatingSystem

plugins {
    // Apply the java Plugin to add support for Java.
    id 'java'
}

// Find out what the target os is
if (!project.hasProperty('targetOS')) project.ext.os = OperatingSystem.current()
else {
    if (targetOS.equalsIgnoreCase("linux")) project.ext.os = OperatingSystem.LINUX
    else if (targetOS.equalsIgnoreCase("windows") || os.equalsIgnoreCase("win")) project.ext.os = OperatingSystem.WINDOWS
    else if (targetOS.equalsIgnoreCase("macos") || os.equalsIgnoreCase("osx")) project.ext.os = OperatingSystem.MAC_OS
}

switch (project.ext.os) {
    case OperatingSystem.LINUX:
        project.ext.lwjglNatives = "natives-linux"
        project.ext.imguiNatives = "natives-linux"
        break
    case OperatingSystem.WINDOWS:
        project.ext.lwjglNatives = "natives-windows"
        project.ext.imguiNatives = "natives-windows"
        break
    case OperatingSystem.MAC_OS:
        project.ext.imguiNatives = "natives-macos"
        project.ext.lwjglNatives = project.ext.os.properties.get("arch").startsWith("aarch64") ? "natives-macos-arm64" : "natives-macos"
        break
}


repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    maven {
        name "spellbookRepositoryReleases"
        url "https://maven.sebsa.dk/releases"
    }
    maven {
        name "spellbookRepositorySnapshots"
        url "https://maven.sebsa.dk/snapshots"
    }
    maven {
        name "realrobotixImguiJava"
        url "https://maven.realrobotix.me/imgui-java"
    }
}

dependencies {
    implementation "dk.sebsa:mana:${rootProject.ext.manaVersion}"
    compileOnly "org.projectlombok:lombok:${rootProject.ext.lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${rootProject.ext.lombokVersion}"

    implementation "org.joml:joml:${rootProject.ext.jomlVersion}"

    // LWJGL
    implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")

    ['', '-glfw', '-opengl', '-stb', '-openal', '-tinyfd'].each {
        implementation "org.lwjgl:lwjgl$it:$lwjglVersion"
        implementation "org.lwjgl:lwjgl$it::$lwjglNatives"
    }

    implementation "io.github.spair:imgui-java-binding:$imguiVersion"
    implementation "io.github.spair:imgui-java-lwjgl3:$imguiVersion"
    implementation "io.github.spair:imgui-java-$imguiNatives:$imguiVersion"

    // https://mvnrepository.com/artifact/net.java.dev.jna/jna-platform
    implementation 'net.java.dev.jna:jna-platform:5.13.0'
}

def targetJavaVersion = 21


tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

compileJava {
    sourceCompatibility = '1.21'
    targetCompatibility = '1.21'
    options.release = targetJavaVersion
}